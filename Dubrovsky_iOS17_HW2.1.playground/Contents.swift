import UIKit



// MARK: - Задача #1.
// MARK: Какого типа переменные подойдут для хранения следующей информации:

/*
 
 Возраст человека: - Int
 Данную переменную я рассматриваю с точки зрения паспорта, где указывается целочисленное определение. Лучше использовать Integer.
 
 Население города: - Int
 Данная переменная тоже будет - Integer. Количество людей всегда будет четко определено целочисленным числом.
 
 Число звезд в галактике: - Int
 Данная переменная тоже будет - Integer. Т.к. количество звезд всегда будет целым числом.
 
 Один байт ОЗУ: - Int или Double
 Данную переменную я рассматриваю с нескольких точек зрения:
 1: Например для интернет-магазина техники, лучше указывать целым числом, для корректного понимания покупателей.
 2: Например для тех. калькулятора, вычесления байт правильнее указывать в Double, для получения верных вычеслений.
 
 Средняя зарплата за год: - Double
 Данную переменную рассматриваю в формате Double. Т.к. зарплата это точное число, включающее в себя и копейки.
 
 Цвет фигуры: - String или UIColor
 Для отображения цвета на экране или в консоле лучше использовать Sting, для назначения цвета фигуре - UIColor.
 
 Длина в мм: - Int
 Здесь также как с ОЗУ, я рассматриваю несколько точек зрения:
 1: Например, в основном, в реалиях жизни, меньше чем мм, единиицу измерения мы не используем, в таком случае лучше хранить в Integer.
 2: А если напрмер, нам необходимы более точные вычисления, тогда лучше использовать тип Double.
 
 Длина в см: - Double
 Лучше использовать тип Double, т.к. зачастую см мы указзываем вместе с мм, т.е. числом с плавающей точкой.
 
 Фамилия человека: - String
 Лучше использовать тип String, наверное тут обьяснение не требуется, это срока - соотсвенно строковой тип данных.
 
 Время года: - String
 Также лучше использовать тип String, т.к. тут тоже лучше представлять в виде текста.
 
 Пол человека: - String
 Также лучше использовать тип String. Я бы поместил в перечисление, например:
 
   enum sexOfPerson {
       case man = "мужской"
       case woman = "женский"
   }
 
*/





// MARK: - Задача #2.
// MARK: Объявите и проинициализируйте переменные из задачи 1, дав им имена по смыслу. Выведите значения этих переменных в консоль в форме <Название: значение>. Задачу необходимо сделать в Playground.

// Возраст человека: - Int
let age: Int = 30

// Население города: - Int
var cityPopulation: Int = 200_000

// Число звезд в галактике: - Int
var numberOfStars: Int = 1_000_000

// Один байт ОЗУ: - Int или Double
let numberOfBytes: Int = 1                             // или let numberOfBytes: Double = 1.5

//Средняя зарплата за год: - Double
var averageSalaryForYear: Double = 54_000.40

// Цвет фигуры: - String или UIColor
let figureColor: UIColor = .white                      // или let figureColor: String = "Белый"

// MARK: РЕВЬЮ - Цвет фигуры:
// Иногда удобнее создать в коде перечень констант, которые будут в дальнейшем использоваться по всему проекту, например перечень цветов, в этом случае если цвет простой можно сразу в имени указать какой именно это будет цвет:
// let whiteColor: UIColor = .white

// Длина в мм: - Int
let lengthInMillimeters: Int = 20                      // или let lengthInMillimeters: Double = 20.35

// Длина в см: - Double
let lengthInCentimeters: Double = 54.2                 // или let lengthInCentimeters: Int = 54

// Фамилия человека: - String
var surname: String = "Дубровский"

// Время года: - String
let season: String = "Лето"

//Пол человека: - String
let man: String = "Мужчина"
let woman: String = "Женщина"

// MARK: РЕВЬЮ - Пол человека:
// Или var isMale = true
// Если будет false - значит пользователь женщина. Хорошей практикой является установка в начале названия переменной Bool приставку “is” - читая код, в котором явно не указан тип Вы сразу сможете определить что это булево значение.

// Вывод результатов:
print("#2 задание: \nВозраст: \(age) \nНаселение города: \(cityPopulation) \nЧисло звёзд: \(numberOfStars) \nКоличество байт: \(numberOfStars) \nСредняя зарплата за год: \(averageSalaryForYear) \nЦвет фигуры: \(figureColor) \nДлина в мм: \(lengthInMillimeters) \nДлина в см: \(lengthInCentimeters) \nФамилия: \(surname) \nВремя года: \(season) \nПол человека: \(man) или \(woman)\n")

/*
 
 Объявите и проинициализируйте переменные из задачи 1, дав им имена по смыслу.
 Выведите значения этих переменных в консоль в форме <Название: значение>. Задачу необходимо сделать в Playground.
 Например, Возраст человека: 25.

 Алгоритм выполнения:
 Подумайте, константа или переменная лучше подойдет для хранения информации;
 Придумайте название, соответствующее смыслу переменной или константы;
 Объявите переменные и проинициализируйте подходящими по смыслу значениями;
 Выведите значения в консоль.
 
 */





// MARK: - Задача #3.
// MARK: Решим бухгалтерскую задачу.

var firstEmployeeSalary: Int = 55_000
var secondEmployeeSalary: Int = 40_000
var thirdEmployeeSalary: Int = 70_000

// Вычесление для первого сотрудника:
firstEmployeeSalary *= 2

// Вычесление для второго сотрудника:
secondEmployeeSalary += 15_000

// Вывод результатов:
print("#3 задание: \nПервый сотрудник: \(firstEmployeeSalary) руб. \nВторой сотрудник: \(secondEmployeeSalary) руб. \nТретий сотрудник: \(thirdEmployeeSalary) руб.")

/*
 
 Каждый год бухгалтер получает информацию об изменении зарплат сотрудников, ему нужно провести расчеты.
 
 Известны зарплаты трех сотрудников:
 1 сотрудник -- 55000
 2 сотрудник -- 40000
 3 сотрудник -- 70000

 Через месяц зарплата первого выросла в 2 раза, зарплата второго выросла на 15000, заплата третьего осталась без изменения.
 Реализуйте расчет новых сумм с помощью арифметических операций с присваиванием. Выведите новые суммы в консоль, каждую с новой строки.

 Алгоритм выполнения для 3 задания:
 Объявите 3 переменных, которые будут определять зарплату подчиненных на разных должностях;
 Придумайте соответствующее название переменной и инициализируйте их размером заработной платы;
 Выполните математические действия в соответствии с условием задачи;
 Распечатайте полученный результат при помощи функции print(), каждый результат с новой строки.
 Пример использования арифметической операции с присваиванием:

 lawyerSalary *= 4  // умножаем зарплату юриста на 4
 Обратите внимание, что при распечатке результата нужно использовать "\n" оператор переноса строки. Это упростит чтение.
 
*/
